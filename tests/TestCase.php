<?php
/**
 * Created by PhpStorm.
 * User: zhiya
 * Date: 9/19/2019
 * Time: 1:53 PM
 */

namespace JoyBusinessAcademy\Profile\Tests;


use Illuminate\Foundation\Testing\RefreshDatabase;
use JoyBusinessAcademy\Profile\Facades\JbaProfile;
use JoyBusinessAcademy\Profile\ProfileServiceProvider;
use JoyBusinessAcademy\Profile\Seeder\DatabaseSeeder;
use Orchestra\Testbench\Concerns\WithLoadMigrationsFrom;
use Orchestra\Testbench\TestCase AS Base;
use InvalidArgumentException;
use Orchestra\Testbench\Database\MigrateProcessor;


class TestCase extends Base
{
    use RefreshDatabase;
    //use MigrateRefreshSeedOnce;


    protected static $migrated = false;
    /**
     * Get package providers.
     *
     * @param \Illuminate\Foundation\Application $app
     * @return array
     */
    protected function getPackageProviders($app)
    {
        return [
            ProfileServiceProvider::class
        ];
    }

    protected function getPackageAliases($app)
    {
        return [
            'Profile' => JbaProfile::class
        ];
    }

    /**
     * Setup the test environment.
     *
     * @return void
     */
    protected function setUp(): void
    {
        parent::setUp();

        $this->prepareForTests();
    }

    private function prepareForTests()
    {
        if(! self::$migrated) {

            $this->loadMigrationsOnce(__DIR__ . '/../database/migrations');

            $this->seed(DatabaseSeeder::class);

            self::$migrated = false;
        }
        $this->withFactories(__DIR__ . '/../database/factories');
    }

    protected function getEnvironmentSetUp($app)
    {
        parent::getEnvironmentSetUp($app); // TODO: Change the autogenerated stub

        /*$app['config']->set('database.default', 'testDB');
        $app['config']->set('database.connections.testDB', [
            'driver' => 'sqlite',
            'database' => ':memory:'
        ]);*/

        $app['config']->set('jba-profile', include __DIR__ . '/../config/jba-profile.php');

    }

    protected function loadMigrationsOnce($paths): void
    {
        $options = \is_array($paths) ? $paths : ['--path' => $paths];

        if (isset($options['--realpath']) && ! \is_bool($options['--realpath'])) {
            throw new InvalidArgumentException('Expect --realpath to be a boolean.');
        }

        $options['--realpath'] = true;

        $migrator = new MigrateProcessor($this, $options);
        $migrator->up();

        $this->resetApplicationArtisanCommands($this->app);

        $this->beforeApplicationDestroyed(static function () use ($migrator) {
            //$migrator->rollback();
        });
    }


}